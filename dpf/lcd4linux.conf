Display dpf {
    Driver     'DPF'
    Port       'usb0'
    Font       '9x10'
    foreground 'ffffff'
    Background '000000'
    Basecolor  '000000'
}

Variables {
   sec 1000
   fivesec 5000
   tensec 10000
   min 60000
   eighthour 28800000
}

Widget background {
    class 'Image'
    file '/root/ipfire.png'
    update min
    visible 1
    inverted 0
}

Widget heading {
    class       'Text'
    expression  '=== IPFIRE STATUS ==='
    align       'C'
    width       35
    update      eighthour
    background	'ffffff00'
}

Widget load_txt {
    class	'Text'
    expression	'CPU'
    width       3
    background  'ffffff00'
    update      tensec
}

Widget load_bar {
    class       'Bar'
    expression  proc_stat::cpu('user', 5000)
    precision	0
    min		0
    max		100
    length      10
    direction   'E'
    background  '444444'
    update      fivesec
    background  'cccccc'
}

Widget uptime {
    class       'Text'
    expression  uptime('%dd %H:%Mh')
    prefix      'Up'
    width       16
    align       'R'
    update      min
}

widget ram_txt {
    class       'Text'
    expression  'Mem'
    width       3
    update      tensec
    background  'ffffff00'
}

Widget ram_bar {
    class       'Bar'
    expression  ( (meminfo('MemTotal')-meminfo('MemFree')) /meminfo('MemTotal')*100)
    precision	0
    min		0
    max		100
    length      10
    direction   'E'
    background  '444444'
    update      fivesec
    background  'cccccc'
}

Widget ip {
    class       'Text'
    expression  exec('echo 127.0.0.1', eighthour)
    #expression  exec('curl http://wtfismyip.com/text', eighthour)
    prefix      'IP'
    width       16
    align       'R'
    update      sec
    background  'ffffff00'
}

Widget red_rate_down {
    class       'Text'
    expression  netdev::fast('red0', 'Rx_bytes', 500)/1024
    prefix      'WAN d'
    postfix     ' kB/s'
    align       'R'
    precision   0
    width       16
    update      1000
    foreground 'FF0000'
    background  'ffffff00'
}

Widget red_rate_up {
    class       'Text'
    expression  netdev::fast('red0', 'Tx_bytes', 500)/1024
    prefix      'WAN u'
    align       'R'
    precision   0
    width       16
    postfix     ' kB/s'
    update      sec
    foreground 'FF0000'
    background  'ffffff00'
}

Widget red_traffic_down {
    class       'Text'
    expression  netdev::fast('red0', 'Rx_bytes', 0)/1048576
    prefix      'Vol d'
    align       'R'
    precision   0
    width       16
    postfix     ' MB'
    update      sec
    foreground 'FF0000'
    background  'ffffff00'
}

Widget red_traffic_up {
    class       'Text'
    expression	netdev::fast('red0', 'Tx_bytes', 0)/1048576
    prefix	'Vol u'
    align	'R'
    precision	0
    width	16
    postfix	' MB'
    update	sec
    foreground	'FF0000'
    background	'ffffff00'
}

Widget green_rate_down {
    class       'Text'
    expression  netdev::fast('green0', 'Rx_bytes', 500)/1024
    prefix      'LAN d'
    postfix     ' kB/s'
    align       'R'
    precision   0
    width       16
    update      sec
    foreground '009900'
    background  'ffffff00'
}

Widget green_rate_up {
    class       'Text'
    expression  netdev::fast('green0', 'Tx_bytes', 500)/1024
    prefix      'LAN u'
    align       'R'
    precision   0
    width       16
    postfix     ' kB/s'
    update      sec
    foreground '009900'
    background  'ffffff00'
}

Widget green_traffic_down {
    class       'Text'
    expression  netdev::fast('green0', 'Rx_bytes', 0)/1048576
    prefix      'Vol d'
    align       'R'
    precision   0
    width       16
    postfix     ' MB'
    update      sec
    foreground '009900'
    background  'ffffff00'
}

Widget green_traffic_up {
    class       'Text'
    expression	netdev::fast('green0', 'Tx_bytes', 0)/1048576
    prefix	'Vol u'
    align	'R'
    precision	0
    width	16
    postfix	' MB'
    update	sec
    foreground	'009900'
    background	'ffffff00'
}

Widget blue_rate_down {
    class       'Text'
    expression  netdev::fast('blue0', 'Rx_bytes', 500)/1024
    prefix      'WLAN d'
    postfix     ' kB/s'
    align       'R'
    precision   0
    width       16
    update      sec
    foreground '0000FF'
    background  'ffffff00'
}

Widget blue_rate_up {
    class       'Text'
    expression  netdev::fast('blue0', 'Tx_bytes', 500)/1024
    prefix      'WLAN u'
    align       'R'
    precision   0
    width       16
    postfix     ' kB/s'
    update      sec
    foreground '0000FF'
    background  'ffffff00'
}

Widget blue_traffic_down {
    class       'Text'
    expression  netdev::fast('blue0', 'Rx_bytes', 0)/1048576
    prefix      'Vol d'
    align       'R'
    precision   0
    width       16
    postfix     ' MB'
    update      sec
    foreground '0000FF'
    background  'ffffff00'
}

Widget blue_traffic_up {
    class       'Text'
    expression	netdev::fast('blue0', 'Tx_bytes', 0)/1048576
    prefix	'Vol u'
    align	'R'
    precision	0
    width	16
    postfix	' MB'
    update	sec
    foreground	'0000FF'
    background	'ffffff00'
}

Widget blue_users {
    class       'Text'
    expression  exec('hostapd_cli all_sta|egrep "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"|wc -w', min)
    prefix      'WLAN c'
    align       'R'
    precision   0
    width       16
    postfix     ' dev(s)'
    foreground '0000FF'
    background  'ffffff00'
}




Widget orange_rate_down {
    class       'Text'
    expression  netdev::fast('orange0', 'Rx_bytes', 500)/1024
    prefix      'DMZ d'
    postfix     ' kB/s'
    align       'R'
    precision   0
    width       16
    update      sec
    foreground 'FF6600'
    background  'ffffff00'
}

Widget orange_rate_up {
    class       'Text'
    expression  netdev::fast('orange0', 'Tx_bytes', 500)/1024
    prefix      'DMZ u'
    align       'R'
    precision   0
    width       16
    postfix     ' kB/s'
    update      sec
    foreground 'FF6600'
    background  'ffffff00'
}

Widget orange_traffic_down {
    class       'Text'
    expression  netdev::fast('orange0', 'Rx_bytes', 0)/1048576
    prefix      'Vol d'
    align       'R'
    precision   0
    width       16
    postfix     ' MB'
    update      sec
    foreground 'FF6600'
    background  'ffffff00'
}

Widget orange_traffic_up {
    class       'Text'
    expression	netdev::fast('orange0', 'Tx_bytes', 0)/1048576
    prefix	'Vol u'
    align	'R'
    precision	0
    width	16
    postfix	' MB'
    update	sec
    foreground	'FF6600'
    background	'ffffff00'
}


Widget purple_rate_down {
    class       'Text'
    expression  netdev::fast('tun0', 'Rx_bytes', 500)/1024
    prefix      'VPN d'
    postfix     ' kB/s'
    align       'R'
    precision   0
    width       16
    update      sec
    foreground '8B008B'
    background  'ffffff00'
}

Widget purple_rate_up {
    class       'Text'
    expression  netdev::fast('tun0', 'Tx_bytes', 500)/1024
    prefix      'VPN u'
    align       'R'
    precision   0
    width       16
    postfix     ' kB/s'
    update      sec
    foreground '8B008B'
    background  'ffffff00'
}

Widget purple_traffic_down {
    class       'Text'
    expression  netdev::fast('tun0', 'Rx_bytes', 0)/1048576
    prefix      'Vol d'
    align       'R'
    precision   0
    width       16
    postfix     ' MB'
    update      sec
    foreground '8B008B'
    background  'ffffff00'
}

Widget purple_traffic_up {
    class       'Text'
    expression	netdev::fast('tun0', 'Tx_bytes', 0)/1048576
    prefix	'Vol u'
    align	'R'
    precision	0
    width	16
    postfix	' MB'
    update	sec
    foreground	'8B008B'
    background	'ffffff00'
}

Widget purple_users {
    class       'Text'
    expression  exec('cut -d"," -f3 /var/run/ovpnserver.log|egrep "[0-9].[0-9].[0-9].[0-9]"|wc -w', min)
    prefix	'VPN c'
    align	'R'
    precision	0
    width	16
    postfix	' user(s)'
    foreground 'FF0000'
    background  'ffffff00'
}






Layout mylayout {
    Row2 {
        Col1    'heading'
    }
    Row4 {
        Col1    'load_txt'
	Col7	'load_bar'
        Col19   'ram_txt'
        Col25   'ram_bar'
    }
    Row6 {
        Col1	'uptime'
	Col19	'ip'
    }
    Row8 {
        Col1    'red_rate_down'
        Col19   'red_rate_up'
    }
    Row9 {
        Col1    'red_traffic_down'
        Col19   'red_traffic_up'
    }

    Row11 {
        Col1    'green_rate_down'
        Col19   'green_rate_up'
    }
    Row12 {
        Col1    'green_traffic_down'
        Col19   'green_traffic_up'
    }

    Row14 {
        Col1    'blue_rate_down'
        Col19   'blue_rate_up'
    }
    Row15 {
        Col1    'blue_traffic_down'
        Col19   'blue_traffic_up'
    }

    Row17 {
        Col1    'orange_rate_down'
        Col19   'orange_rate_up'
    }
    Row18 {
        Col1    'orange_traffic_down'
        Col19   'orange_traffic_up'
    }

    Row20 {
        Col1    'purple_rate_down'
        Col19   'purple_rate_up'
    }
    Row21 {
        Col1    'purple_traffic_down'
        Col19   'purple_traffic_up'
    }
    Row22 {
    	Col1	'purple_users'
	Col19	'blue_users'
    }

    Layer 2 {
	X1.Y1 'background'
    }

}

Layout 'mylayout'
Display 'dpf'
